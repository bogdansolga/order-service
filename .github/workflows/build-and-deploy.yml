name: "Build and Deploy"

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.MD'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.MD'
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_REPO_NAME: order-service
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      CURRENT_PROJECT_VERSION: 0.0.1

    steps:
    - uses: actions/checkout@v4.2.2
      name: "Checkout the code"

    - name: "Set up JDK 21"
      uses: actions/setup-java@v4.7.1
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'pom.xml'

    - name: "Update pom.xml with commit hash"
      run: |
        LAST_GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
        sed -i "s/<version>${{ env.CURRENT_PROJECT_VERSION }}-COMMIT-HASH<\/version>/<version>${{ env.CURRENT_PROJECT_VERSION }}-$LAST_GIT_COMMIT_HASH<\/version>/" pom.xml

    - name: "Get project version, current day timestamp and commit hash"
      id: version_info
      run: |
        echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
        echo "timestamp=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: "Login to DockerHub"
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: "Build and push Docker image"
      uses: docker/build-push-action@v4
      env:
        IMAGE_TAG: ${{ steps.version_info.outputs.version }}-${{ steps.version_info.outputs.timestamp }}-${{ steps.version_info.outputs.hash }}
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:${{ env.IMAGE_TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:latest

    - name: "Get commit message"
      id: get_commit_message
      run: |
        commit_message=$(git log -1 --pretty=%B)
        commit_message="${commit_message//'%'/'%25'}"
        commit_message="${commit_message//$'\n'/'%0A'}"
        commit_message="${commit_message//$'\r'/'%0D'}"
        echo "commit_message=$commit_message" >> $GITHUB_OUTPUT

    - name: "Update Kubernetes manifests"
      env:
        IMAGE_TAG: ${{ steps.version_info.outputs.version }}-${{ steps.version_info.outputs.timestamp }}-${{ steps.version_info.outputs.hash }}
        GH_TAG: ${{ secrets.GH_PAT }}
        LATEST_COMMIT_MESSAGE: ${{ steps.get_commit_message.outputs.commit_message }}
      continue-on-error: true
      run: |
        git add pom.xml
        cd k8s
        sed -i 's|image: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:.*|image: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_NAME }}:${{ env.IMAGE_TAG }}|' deployment.yml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git commit -am "[ci] Updated '${{ env.DOCKERHUB_REPO_NAME }}' image to '${{ env.IMAGE_TAG }}', last commit message: '${{ env.LATEST_COMMIT_MESSAGE }}'"
        git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
        git push origin HEAD:${{ github.ref }}
